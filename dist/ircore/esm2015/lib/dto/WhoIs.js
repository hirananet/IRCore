export class WhoIsData {
    constructor() {
        this.isGOP = false;
        this.isSecured = false;
    }
    getLastLogin() {
        const date = new Date(parseInt(this.lastLogin, 10) * 1000);
        let hs = date.getHours();
        if (hs < 10) {
            hs = '0' + hs;
        }
        let mins = date.getMinutes();
        if (mins < 10) {
            mins = '0' + mins;
        }
        let day = date.getDate();
        if (day < 10) {
            day = '0' + day;
        }
        let month = (date.getMonth() + 1);
        if (month < 10) {
            month = '0' + month;
        }
        return day + '/' + month + '/' + date.getFullYear() + ' ' + hs + ':' + mins;
    }
    getIdle() {
        let out = '';
        let idle = this.idle;
        if (idle >= 60) {
            let secs = (this.idle % 60);
            if (secs < 10) {
                secs = '0' + secs;
            }
            out = secs + 's';
            idle = Math.floor(idle / 60);
        }
        else {
            return this.idle + 's';
        }
        if (idle >= 60) {
            let mins = (idle % 60);
            if (mins < 10) {
                mins = '0' + mins;
            }
            out = mins + 'm ' + out;
            idle = Math.floor(idle / 60);
        }
        else {
            return idle + 'm ' + out;
        }
        if (idle >= 24) {
            let hs = (idle % 24);
            if (hs < 10) {
                hs = '0' + hs;
            }
            out = hs + 'h ' + out;
            idle = Math.floor(idle / 24);
        }
        else {
            return idle + 'h ' + out;
        }
        return idle + 'd ' + out;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2hvSXMuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvYWxleGEvZ2l0L0lSQ29yZS9wcm9qZWN0cy9pcmNvcmUvc3JjLyIsInNvdXJjZXMiOlsibGliL2R0by9XaG9Jcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLE9BQU8sU0FBUztJQUF0QjtRQUtTLFVBQUssR0FBRyxLQUFLLENBQUM7UUFHZCxjQUFTLEdBQUcsS0FBSyxDQUFDO0lBOEQzQixDQUFDO0lBekRRLFlBQVk7UUFDakIsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDM0QsSUFBSSxFQUFFLEdBQVEsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzlCLElBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUNWLEVBQUUsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDO1NBQ2Y7UUFDRCxJQUFJLElBQUksR0FBUSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDbEMsSUFBRyxJQUFJLEdBQUcsRUFBRSxFQUFFO1lBQ1osSUFBSSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUM7U0FDbkI7UUFDRCxJQUFJLEdBQUcsR0FBUSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDOUIsSUFBRyxHQUFHLEdBQUcsRUFBRSxFQUFFO1lBQ1gsR0FBRyxHQUFHLEdBQUcsR0FBQyxHQUFHLENBQUM7U0FDZjtRQUNELElBQUksS0FBSyxHQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3ZDLElBQUcsS0FBSyxHQUFHLEVBQUUsRUFBRTtZQUNiLEtBQUssR0FBRyxHQUFHLEdBQUMsS0FBSyxDQUFDO1NBQ25CO1FBQ0QsT0FBTyxHQUFHLEdBQUcsR0FBRyxHQUFHLEtBQUssR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQztJQUM5RSxDQUFDO0lBRU0sT0FBTztRQUNaLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDckIsSUFBSSxJQUFJLElBQUksRUFBRSxFQUFFO1lBQ2QsSUFBSSxJQUFJLEdBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ2pDLElBQUcsSUFBSSxHQUFHLEVBQUUsRUFBRTtnQkFDWixJQUFJLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQzthQUNuQjtZQUNELEdBQUcsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDO1lBQ2pCLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQztTQUM5QjthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztTQUN4QjtRQUNELElBQUksSUFBSSxJQUFJLEVBQUUsRUFBRTtZQUNkLElBQUksSUFBSSxHQUFRLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQzVCLElBQUcsSUFBSSxHQUFHLEVBQUUsRUFBRTtnQkFDWixJQUFJLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQzthQUNuQjtZQUNELEdBQUcsR0FBRyxJQUFJLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQztZQUN4QixJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNMLE9BQU8sSUFBSSxHQUFHLElBQUksR0FBRyxHQUFHLENBQUM7U0FDMUI7UUFDRCxJQUFJLElBQUksSUFBSSxFQUFFLEVBQUU7WUFDZCxJQUFJLEVBQUUsR0FBUSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQztZQUMxQixJQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7Z0JBQ1YsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUM7YUFDZjtZQUNELEdBQUcsR0FBRyxFQUFFLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQztZQUN0QixJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNMLE9BQU8sSUFBSSxHQUFHLElBQUksR0FBRyxHQUFHLENBQUM7U0FDMUI7UUFDRCxPQUFPLElBQUksR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDO0lBQzNCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5uZWwgfSBmcm9tICcuL0NoYW5uZWwnO1xuXG5leHBvcnQgY2xhc3MgV2hvSXNEYXRhIHtcblxuICBwdWJsaWMgdXNlcm5hbWU6IHN0cmluZztcbiAgcHVibGljIGNvbm5lY3RlZEZyb20/OiBzdHJpbmc7XG4gIHB1YmxpYyBzZXJ2ZXI/OiBzdHJpbmc7XG4gIHB1YmxpYyBpc0dPUCA9IGZhbHNlO1xuICBwdWJsaWMgbW9kZXM6IHN0cmluZztcbiAgcHVibGljIHVzZXJBY2NvdW50OiBzdHJpbmc7XG4gIHB1YmxpYyBpc1NlY3VyZWQgPSBmYWxzZTtcbiAgcHVibGljIGlkbGU6IG51bWJlcjtcbiAgcHVibGljIGxhc3RMb2dpbjogc3RyaW5nO1xuICBwdWJsaWMgY2hhbm5lbExpc3Q6IENoYW5uZWxbXTtcblxuICBwdWJsaWMgZ2V0TGFzdExvZ2luKCk6IHN0cmluZyB7XG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHBhcnNlSW50KHRoaXMubGFzdExvZ2luLCAxMCkgKiAxMDAwKTtcbiAgICBsZXQgaHM6IGFueSA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICBpZihocyA8IDEwKSB7XG4gICAgICBocyA9ICcwJyArIGhzO1xuICAgIH1cbiAgICBsZXQgbWluczogYW55ID0gZGF0ZS5nZXRNaW51dGVzKCk7XG4gICAgaWYobWlucyA8IDEwKSB7XG4gICAgICBtaW5zID0gJzAnICsgbWlucztcbiAgICB9XG4gICAgbGV0IGRheTogYW55ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgaWYoZGF5IDwgMTApIHtcbiAgICAgIGRheSA9ICcwJytkYXk7XG4gICAgfVxuICAgIGxldCBtb250aDogYW55ID0gKGRhdGUuZ2V0TW9udGgoKSArIDEpO1xuICAgIGlmKG1vbnRoIDwgMTApIHtcbiAgICAgIG1vbnRoID0gJzAnK21vbnRoO1xuICAgIH1cbiAgICByZXR1cm4gZGF5ICsgJy8nICsgbW9udGggKyAnLycgKyBkYXRlLmdldEZ1bGxZZWFyKCkgKyAnICcgKyBocyArICc6JyArIG1pbnM7XG4gIH1cblxuICBwdWJsaWMgZ2V0SWRsZSgpOiBzdHJpbmcge1xuICAgIGxldCBvdXQgPSAnJztcbiAgICBsZXQgaWRsZSA9IHRoaXMuaWRsZTtcbiAgICBpZiAoaWRsZSA+PSA2MCkge1xuICAgICAgbGV0IHNlY3M6IGFueSA9ICh0aGlzLmlkbGUgJSA2MCk7XG4gICAgICBpZihzZWNzIDwgMTApIHtcbiAgICAgICAgc2VjcyA9ICcwJyArIHNlY3M7XG4gICAgICB9XG4gICAgICBvdXQgPSBzZWNzICsgJ3MnO1xuICAgICAgaWRsZSA9IE1hdGguZmxvb3IoaWRsZSAvIDYwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMuaWRsZSArICdzJztcbiAgICB9XG4gICAgaWYgKGlkbGUgPj0gNjApIHtcbiAgICAgIGxldCBtaW5zOiBhbnkgPSAoaWRsZSAlIDYwKTtcbiAgICAgIGlmKG1pbnMgPCAxMCkge1xuICAgICAgICBtaW5zID0gJzAnICsgbWlucztcbiAgICAgIH1cbiAgICAgIG91dCA9IG1pbnMgKyAnbSAnICsgb3V0O1xuICAgICAgaWRsZSA9IE1hdGguZmxvb3IoaWRsZSAvIDYwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGlkbGUgKyAnbSAnICsgb3V0O1xuICAgIH1cbiAgICBpZiAoaWRsZSA+PSAyNCkge1xuICAgICAgbGV0IGhzOiBhbnkgPSAoaWRsZSAlIDI0KTtcbiAgICAgIGlmKGhzIDwgMTApIHtcbiAgICAgICAgaHMgPSAnMCcgKyBocztcbiAgICAgIH1cbiAgICAgIG91dCA9IGhzICsgJ2ggJyArIG91dDtcbiAgICAgIGlkbGUgPSBNYXRoLmZsb29yKGlkbGUgLyAyNCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBpZGxlICsgJ2ggJyArIG91dDtcbiAgICB9XG4gICAgcmV0dXJuIGlkbGUgKyAnZCAnICsgb3V0O1xuICB9XG5cbn1cbiJdfQ==