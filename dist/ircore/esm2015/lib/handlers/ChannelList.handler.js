import { EventEmitter } from '@angular/core';
/*
  Clase para manejar los canales que tiene un usuario.
  Lista de canales que trae el whois de un usuario o el mensaje inicial
*/
// @dynamic
export class ChannelListHandler {
    static setChannelList(user, channelList) {
        // FIXME: update the same instance.
        this.uChannelList[user] = channelList;
        this.channelListUpdated.emit(new UpdateChannelList(user, channelList));
    }
    static getChannels() {
        return this.uChannelList;
    }
    static setHandler(hdlr) {
        this.channelListUpdated.subscribe(data => {
            hdlr.onChannelList(data.user, data.channels);
        });
    }
}
ChannelListHandler.uChannelList = {};
ChannelListHandler.channelListUpdated = new EventEmitter();
export class UserChannelList {
}
export class UpdateChannelList {
    constructor(user, channels) {
        this.channels = [];
        this.user = user;
        this.channels = channels;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hhbm5lbExpc3QuaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9hbGV4YS9naXQvSVJDb3JlL3Byb2plY3RzL2lyY29yZS9zcmMvIiwic291cmNlcyI6WyJsaWIvaGFuZGxlcnMvQ2hhbm5lbExpc3QuaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzdDOzs7RUFHRTtBQUNGLFdBQVc7QUFDWCxNQUFNLE9BQU8sa0JBQWtCO0lBS3RCLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBWSxFQUFFLFdBQXNCO1FBQy9ELG1DQUFtQztRQUNuQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLFdBQVcsQ0FBQztRQUN0QyxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksaUJBQWlCLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVNLE1BQU0sQ0FBQyxXQUFXO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUMzQixDQUFDO0lBRU0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFtQjtRQUMxQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDL0MsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOztBQWpCYywrQkFBWSxHQUFvQixFQUFFLENBQUM7QUFDM0IscUNBQWtCLEdBQW9DLElBQUksWUFBWSxFQUFxQixDQUFDO0FBb0JySCxNQUFNLE9BQU8sZUFBZTtDQUUzQjtBQUVELE1BQU0sT0FBTyxpQkFBaUI7SUFHNUIsWUFBWSxJQUFZLEVBQUUsUUFBbUI7UUFEN0MsYUFBUSxHQUFjLEVBQUUsQ0FBQztRQUV2QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENoYW5uZWwgfSBmcm9tICcuLi9kdG8vQ2hhbm5lbCc7XG5cbi8qXG4gIENsYXNlIHBhcmEgbWFuZWphciBsb3MgY2FuYWxlcyBxdWUgdGllbmUgdW4gdXN1YXJpby5cbiAgTGlzdGEgZGUgY2FuYWxlcyBxdWUgdHJhZSBlbCB3aG9pcyBkZSB1biB1c3VhcmlvIG8gZWwgbWVuc2FqZSBpbmljaWFsXG4qL1xuLy8gQGR5bmFtaWNcbmV4cG9ydCBjbGFzcyBDaGFubmVsTGlzdEhhbmRsZXIge1xuXG4gIHByaXZhdGUgc3RhdGljIHVDaGFubmVsTGlzdDogVXNlckNoYW5uZWxMaXN0ID0ge307XG4gIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgY2hhbm5lbExpc3RVcGRhdGVkOiBFdmVudEVtaXR0ZXI8VXBkYXRlQ2hhbm5lbExpc3Q+ID0gbmV3IEV2ZW50RW1pdHRlcjxVcGRhdGVDaGFubmVsTGlzdD4oKTtcblxuICBwdWJsaWMgc3RhdGljIHNldENoYW5uZWxMaXN0KHVzZXI6IHN0cmluZywgY2hhbm5lbExpc3Q6IENoYW5uZWxbXSkge1xuICAgIC8vIEZJWE1FOiB1cGRhdGUgdGhlIHNhbWUgaW5zdGFuY2UuXG4gICAgdGhpcy51Q2hhbm5lbExpc3RbdXNlcl0gPSBjaGFubmVsTGlzdDtcbiAgICB0aGlzLmNoYW5uZWxMaXN0VXBkYXRlZC5lbWl0KG5ldyBVcGRhdGVDaGFubmVsTGlzdCh1c2VyLCBjaGFubmVsTGlzdCkpO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBnZXRDaGFubmVscygpOiBVc2VyQ2hhbm5lbExpc3Qge1xuICAgIHJldHVybiB0aGlzLnVDaGFubmVsTGlzdDtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgc2V0SGFuZGxlcihoZGxyOiBPbkNoYW5uZWxMaXN0KSB7XG4gICAgdGhpcy5jaGFubmVsTGlzdFVwZGF0ZWQuc3Vic2NyaWJlKGRhdGEgPT4ge1xuICAgICAgaGRsci5vbkNoYW5uZWxMaXN0KGRhdGEudXNlciwgZGF0YS5jaGFubmVscyk7XG4gICAgfSk7XG4gIH1cblxufVxuXG5leHBvcnQgY2xhc3MgVXNlckNoYW5uZWxMaXN0IHtcbiAgW2tleTogc3RyaW5nXTogQ2hhbm5lbFtdO1xufVxuXG5leHBvcnQgY2xhc3MgVXBkYXRlQ2hhbm5lbExpc3Qge1xuICB1c2VyOiBzdHJpbmc7XG4gIGNoYW5uZWxzOiBDaGFubmVsW10gPSBbXTtcbiAgY29uc3RydWN0b3IodXNlcjogc3RyaW5nLCBjaGFubmVsczogQ2hhbm5lbFtdKSB7XG4gICAgdGhpcy51c2VyID0gdXNlcjtcbiAgICB0aGlzLmNoYW5uZWxzID0gY2hhbm5lbHM7XG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBPbkNoYW5uZWxMaXN0IHtcbiAgb25DaGFubmVsTGlzdCh1c2VyOiBzdHJpbmcsIGNoYW5uZWxzOiBDaGFubmVsW10pO1xufVxuIl19