{"version":3,"file":"ircore.js","sources":["../../../projects/ircore/src/lib/dto/Join.ts","../../../projects/ircore/src/lib/handlers/Part.handler.ts","../../../projects/ircore/src/lib/dto/KickInfo.ts","../../../projects/ircore/src/lib/handlers/Kick.handler.ts","../../../projects/ircore/src/lib/dto/Away.ts","../../../projects/ircore/src/lib/dto/NewMode.ts","../../../projects/ircore/src/lib/handlers/Gmode.handler.ts","../../../projects/ircore/src/lib/utils/UModes.utils.ts","../../../projects/ircore/src/lib/dto/Channel.ts","../../../projects/ircore/src/lib/handlers/ChannelList.handler.ts","../../../projects/ircore/src/lib/dto/WhoIs.ts","../../../projects/ircore/src/lib/handlers/Whois.handler.ts","../../../projects/ircore/src/lib/handlers/Who.handler.ts","../../../projects/ircore/src/lib/dto/Who.ts","../../../projects/ircore/src/lib/handlers/Users.handler.ts","../../../projects/ircore/src/lib/dto/User.ts","../../../projects/ircore/src/lib/dto/UserInChannel.ts","../../../projects/ircore/src/lib/handlers/List.handler.ts","../../../projects/ircore/src/lib/dto/ChannelInfo.ts","../../../projects/ircore/src/lib/handlers/Status.handler.ts","../../../projects/ircore/src/lib/dto/NickChange.ts","../../../projects/ircore/src/lib/utils/IRCMessage.util.ts","../../../projects/ircore/src/lib/utils/validRegex.ts","../../../projects/ircore/src/lib/handlers/Mode.handler.ts","../../../projects/ircore/src/lib/handlers/Away.handler.ts","../../../projects/ircore/src/lib/handlers/Ignore.Handler.ts","../../../projects/ircore/src/lib/handlers/Motd.handler.ts","../../../projects/ircore/src/lib/handlers/ChannelStatus.handler.ts","../../../projects/ircore/src/lib/dto/Part.ts","../../../projects/ircore/src/lib/handlers/Quit.handler.ts","../../../projects/ircore/src/lib/dto/Quit.ts","../../../projects/ircore/src/lib/handlers/Join.handler.ts","../../../projects/ircore/src/lib/handlers/Server.handler.ts","../../../projects/ircore/src/lib/handlers/Message.handler.ts","../../../projects/ircore/src/lib/dto/IndividualMessage.ts","../../../projects/ircore/src/lib/utils/Time.util.ts","../../../projects/ircore/src/lib/handlers/Moderated.handler.ts","../../../projects/ircore/src/lib/IRCParserV2.ts","../../../projects/ircore/src/lib/ircore.module.ts","../../../projects/ircore/src/lib/utils/WebSocket.util.ts","../../../projects/ircore/src/lib/services/user-info.service.ts","../../../projects/ircore/src/lib/IRCore.service.ts","../../../projects/ircore/src/lib/helpers/avatar.helper.ts","../../../projects/ircore/src/lib/services/ChannelData.ts","../../../projects/ircore/src/lib/utils/EmoteList.ts","../../../projects/ircore/src/lib/utils/PostProcessor.ts","../../../projects/ircore/src/lib/services/channels.service.ts","../../../projects/ircore/src/lib/services/PrivmsgData.ts","../../../projects/ircore/src/lib/services/privmsg.service.ts","../../../projects/ircore/src/lib/services/server-msg.service.ts","../../../projects/ircore/src/lib/services/who-status.service.ts","../../../projects/ircore/src/public-api.ts","../../../projects/ircore/src/ircore.ts"],"sourcesContent":["import { User } from './User';\nimport { OriginData } from '../utils/IRCMessage.util';\nimport { Channel } from './Channel';\n\nexport class Join {\n  public origin: OriginData;\n  public user: User;\n  public channel: Channel;\n}\n","import { Part } from './../dto/Part';\nimport { EventEmitter } from '@angular/core';\n\n// @dynamic\nexport class PartHandler {\n  public static readonly partResponse: EventEmitter<Part> = new EventEmitter<Part>();\n\n  public static onPart(part: Part) {\n    this.partResponse.emit(part);\n  }\n\n  public static setHandler(hdlr: OnPart) {\n    this.partResponse.subscribe(data => {\n      hdlr.onPart(data);\n    });\n  }\n}\n\nexport interface OnPart {\n  onPart(data: Part);\n}\n","import { Channel } from './Channel';\nimport { User } from './User';\nexport class KickInfo {\n  public channel: Channel;\n  public operator: string;\n  public userTarget: User;\n}\n","import { EventEmitter } from '@angular/core';\nimport { KickInfo } from '../dto/KickInfo';\n\n// @dynamic\nexport class KickHandler {\n\n  public static readonly kicked: EventEmitter<KickInfo> = new EventEmitter<KickInfo>();\n\n  public static kickParse(rawMessage: string): string[] {\n    return /#([^\\s]+)\\s([^:]+)\\s/.exec(rawMessage);\n  }\n\n  public static onKick(kick: KickInfo) {\n    this.kicked.emit(kick);\n  }\n\n  public static setHandler(hdlr: OnKick) {\n    this.kicked.subscribe(data => {\n      hdlr.onKick(data);\n    });\n  }\n}\n\nexport interface OnKick {\n  onKick(data: KickInfo);\n}\n","export class Away {\n  public author: string;\n  public message: string;\n}\n","import { User } from './User';\n\nexport class NewMode {\n  userTarget: User;\n  channelTarget: string;\n  modeAdded: boolean;\n  mode: string;\n}\n","import { EventEmitter } from '@angular/core';\n\n/*\n  Clase para manejar los request en +g\n*/\n// @dynamic\nexport class GmodeHandler {\n\n  public static readonly onPrivateRequest: EventEmitter<string> = new EventEmitter<string>();\n\n  public static privateRequest(user: string) {\n    GmodeHandler.onPrivateRequest.emit(user);\n  }\n\n}\n","export enum UModes {\n  FOUNDER,\n  ADMIN,\n  OPER,\n  HALFOPER,\n  VOICE,\n  BANNED\n}\n","import { UModes } from '../utils/UModes.utils';\n\nexport class Channel {\n  channel: string;\n  name: string;\n  mode: UModes;\n\n  constructor(channel: string) {\n    if (channel[0] === '~') {\n      this.mode = UModes.FOUNDER;\n      channel = channel.substr(1);\n    } else if (channel[0] === '&') {\n      this.mode = UModes.ADMIN;\n      channel = channel.substr(1);\n    } else if (channel[0] === '@') {\n      this.mode = UModes.OPER;\n      channel = channel.substr(1);\n    } else if (channel[0] === '%') {\n      this.mode = UModes.HALFOPER;\n      channel = channel.substr(1);\n    } else if (channel[0] === '+') {\n      this.mode = UModes.VOICE;\n      channel = channel.substr(1);\n    }\n    if (channel[0] === '#') {\n      this.channel = channel;\n      this.name = channel.substr(1);\n    } else {\n      this.channel = '#' + channel;\n      this.name = channel;\n    }\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Channel } from '../dto/Channel';\n\n/*\n  Clase para manejar los canales que tiene un usuario.\n  Lista de canales que trae el whois de un usuario o el mensaje inicial\n*/\n// @dynamic\nexport class ChannelListHandler {\n\n  private static uChannelList: UserChannelList = {};\n  public static readonly channelListUpdated: EventEmitter<UpdateChannelList> = new EventEmitter<UpdateChannelList>();\n\n  public static setChannelList(user: string, channelList: Channel[]) {\n    // FIXME: update the same instance.\n    this.uChannelList[user] = channelList;\n    this.channelListUpdated.emit(new UpdateChannelList(user, channelList));\n  }\n\n  public static getChannels(): UserChannelList {\n    return this.uChannelList;\n  }\n\n  public static setHandler(hdlr: OnChannelList) {\n    this.channelListUpdated.subscribe(data => {\n      hdlr.onChannelList(data.user, data.channels);\n    });\n  }\n\n}\n\nexport class UserChannelList {\n  [key: string]: Channel[];\n}\n\nexport class UpdateChannelList {\n  user: string;\n  channels: Channel[] = [];\n  constructor(user: string, channels: Channel[]) {\n    this.user = user;\n    this.channels = channels;\n  }\n}\n\nexport interface OnChannelList {\n  onChannelList(user: string, channels: Channel[]);\n}\n","import { Channel } from './Channel';\n\nexport class WhoIsData {\n\n  public username: string;\n  public connectedFrom?: string;\n  public server?: string;\n  public isGOP = false;\n  public modes: string;\n  public userAccount: string;\n  public isSecured = false;\n  public idle: number;\n  public lastLogin: string;\n  public channelList: Channel[];\n\n  public getLastLogin(): string {\n    const date = new Date(parseInt(this.lastLogin, 10) * 1000);\n    let hs: any = date.getHours();\n    if(hs < 10) {\n      hs = '0' + hs;\n    }\n    let mins: any = date.getMinutes();\n    if(mins < 10) {\n      mins = '0' + mins;\n    }\n    let day: any = date.getDate();\n    if(day < 10) {\n      day = '0'+day;\n    }\n    let month: any = (date.getMonth() + 1);\n    if(month < 10) {\n      month = '0'+month;\n    }\n    return day + '/' + month + '/' + date.getFullYear() + ' ' + hs + ':' + mins;\n  }\n\n  public getIdle(): string {\n    let out = '';\n    let idle = this.idle;\n    if (idle >= 60) {\n      let secs: any = (this.idle % 60);\n      if(secs < 10) {\n        secs = '0' + secs;\n      }\n      out = secs + 's';\n      idle = Math.floor(idle / 60);\n    } else {\n      return this.idle + 's';\n    }\n    if (idle >= 60) {\n      let mins: any = (idle % 60);\n      if(mins < 10) {\n        mins = '0' + mins;\n      }\n      out = mins + 'm ' + out;\n      idle = Math.floor(idle / 60);\n    } else {\n      return idle + 'm ' + out;\n    }\n    if (idle >= 24) {\n      let hs: any = (idle % 24);\n      if(hs < 10) {\n        hs = '0' + hs;\n      }\n      out = hs + 'h ' + out;\n      idle = Math.floor(idle / 24);\n    } else {\n      return idle + 'h ' + out;\n    }\n    return idle + 'd ' + out;\n  }\n\n}\n","import { EventEmitter } from '@angular/core';\nimport { WhoIsData } from '../dto/WhoIs';\n\n/*\n  Clase para manejar el Whois de un usuario.\n*/\n// @dynamic\nexport class WhoIsHandler {\n\n  private static whoisdatas: WhoDatas = {};\n  public static readonly onWhoisResponse: EventEmitter<WhoIsData> = new EventEmitter<WhoIsData>();\n\n  public static addWhoisPartial(user: string, field: string, data: any) {\n    if (!this.whoisdatas[user]) {\n      this.whoisdatas[user] = new WhoIsData();\n      this.whoisdatas[user].username = user;\n    }\n    this.whoisdatas[user][field] = data;\n  }\n\n  public static finalWhoisMessage(user: string) {\n    this.onWhoisResponse.emit(this.whoisdatas[user]);\n  }\n\n  public static getWhoisResponses() {\n    return this.whoisdatas;\n  }\n\n}\n\nexport class WhoDatas {\n  [key: string]: WhoIsData;\n}\n","import { EventEmitter } from '@angular/core';\nimport { Who } from './../dto/Who';\n\n/*\n  Clase para manejar el estado de los usuarios (si está away, es netop, de donde se conecta, etc.)\n*/\n// @dynamic\nexport class WhoHandler {\n\n  public static readonly usersWho: UsersWhos = {};\n  public static readonly onWhoResponse: EventEmitter<Who> = new EventEmitter<Who>();\n\n  public static addWhoData(user: string, data: Who) {\n    if (!this.usersWho[user]) {\n      this.usersWho[user] = data;\n    } else {\n      this.usersWho[user].isAway = data.isAway;\n      this.usersWho[user].isNetOp = data.isNetOp;\n      this.usersWho[user].mode = data.mode;\n      this.usersWho[user].nick = data.nick;\n      this.usersWho[user].rawMsg = data.rawMsg;\n      this.usersWho[user].serverFrom = data.serverFrom;\n    }\n    this.onWhoResponse.emit(this.usersWho[user]);\n  }\n\n  public static getWhoData(user: string): Who {\n    return this.usersWho[user];\n  }\n\n  public static WHOUserParser(message: string) {\n    return /:([^\\s]+)\\s([0-9]+)\\s([^\\s]+)\\s([^\\s]+)\\s([^\\s]+)\\s([^\\s]+)\\s([^\\s]+)\\s([^\\s]+)\\s(H|G)(\\*?)(\\~|\\&|\\@|\\%|\\+)?/.exec(message);\n  }\n\n}\n\nexport class UsersWhos {\n  [key: string]: Who;\n}\n","import { UModes } from './../utils/UModes.utils';\n\nexport class Who {\n  serverFrom: string;\n  nick: string;\n  isNetOp: boolean;\n  isAway: boolean;\n  rawMsg: string;\n  mode: UModes;\n}\n","import { EventEmitter } from '@angular/core';\nimport { UserInChannel } from '../dto/UserInChannel';\n\n/*\n  Clase para manejar los usuarios que hay en un canal (mensaje inicial de usuarios por names)\n*/\n// @dynamic\nexport class UsersHandler {\n\n  private static readonly usersInChannel: ChannelUserList = {};\n  public static readonly usersInChannelResponse: EventEmitter<ChannelAndUserList> = new EventEmitter<ChannelAndUserList>();\n\n  public static addUsersToChannel(channel: string, users: UserInChannel[]) {\n    this.usersInChannel[channel] = users;\n    this.usersInChannelResponse.emit(new ChannelAndUserList(channel, users));\n  }\n\n  public static getChannelOfMessage(message: string) {\n    const messages = /(=|@|\\*)([^:]+):/.exec(message);\n    if(messages && messages.length > 2) {\n      return messages[2].trim();\n    } else {\n      console.error('GCOM, ', message);\n    }\n  }\n\n  public static getUsersInChannel(channel: string): UserInChannel[] {\n    return this.usersInChannel[channel];\n  }\n\n  public static setHandler(hdlr: OnUserList) {\n    this.usersInChannelResponse.subscribe(data => {\n      hdlr.onUserList(data.channel, data.userList);\n    });\n  }\n\n}\n\nexport class ChannelAndUserList {\n  channel: string;\n  userList: UserInChannel[];\n\n  constructor(channel: string, userList: UserInChannel[]) {\n    this.channel = channel;\n    this.userList = userList;\n  }\n}\n\nexport class ChannelUserList {\n  [key: string]: UserInChannel[];\n}\n\nexport interface OnUserList {\n  onUserList(channel: string, users: UserInChannel[]);\n}\n","import { UModes } from '../utils/UModes.utils';\n\nexport class User {\n\n  public nick: string;\n  public mode: UModes;\n  public away?: boolean;\n\n  constructor(nick: string) {\n    if (nick[0] === '~') {\n      this.mode = UModes.FOUNDER;\n      nick = nick.substr(1);\n    } else if (nick[0] === '&') {\n      this.mode = UModes.ADMIN;\n      nick = nick.substr(1);\n    } else if (nick[0] === '@') {\n      this.mode = UModes.OPER;\n      nick = nick.substr(1);\n    } else if (nick[0] === '%') {\n      this.mode = UModes.HALFOPER;\n      nick = nick.substr(1);\n    } else if (nick[0] === '+') {\n      this.mode = UModes.VOICE;\n      nick = nick.substr(1);\n    }\n    this.nick = nick;\n  }\n\n}\n","import { Channel } from './Channel';\nimport { User } from './User';\n\nexport class UserInChannel extends User{\n\n  public channel: Channel;\n\n  constructor(nick: string, channel: string) {\n    super(nick);\n    this.channel = new Channel(channel);\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { ChannelInfo } from '../dto/ChannelInfo';\n\n/*\n  Clase para manejar el comando /list\n*/\n// @dynamic\nexport class ListHandler {\n\n  private static channels: ChannelInfo[] = [];\n  public static readonly channelListCreated: EventEmitter<ChannelInfo[]> = new EventEmitter<ChannelInfo[]>();\n\n  public static addChannels(channel: ChannelInfo): void {\n    this.channels.push(channel);\n  }\n\n  public static newChannelList(): void {\n    this.channels = [];\n    this.channelListCreated.emit(this.channels);\n  }\n\n  public static getChannelList(): ChannelInfo[] {\n    return this.channels;\n  }\n\n}\n","export class ChannelInfo {\n  public name: string;\n  public description: string;\n  public flags: string;\n  public users: number;\n\n  constructor (name: string, description: string, flags: string, users: number) {\n    this.name = name;\n    this.description = description;\n    this.flags = flags;\n    this.users = users;\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { NickChange } from '../dto/NickChange';\n\n\n/*\n  Clase para manejar los cambios de estado del usuario, como cuando es banneado, o kickeado de un canal.\n*/\n// @dynamic\nexport class StatusHandler {\n\n  public static readonly nickAlreadyInUse: EventEmitter<string> = new EventEmitter<string>();\n  public static readonly banned: EventEmitter<string> = new EventEmitter<string>();\n  public static readonly nickChanged: EventEmitter<NickChange> = new EventEmitter<NickChange>();\n\n  public static onNickAlreadyInUse(nickInUse: string) {\n    this.nickAlreadyInUse.emit(nickInUse);\n  }\n\n  public static onBanned(channel: string) {\n    this.banned.emit(channel);\n  }\n\n  public static onNickChanged(nick: NickChange) {\n    this.nickChanged.emit(nick);\n  }\n\n  public static setHandlerNickAlreadyInUse(hdlr: OnNickAlreadyInUse) {\n    this.nickAlreadyInUse.subscribe(data => {\n      hdlr.onNickAlreadyInUse(data);\n    });\n  }\n\n  public static setHandlerBanned(hdlr: OnBanned) {\n    this.banned.subscribe(data => {\n      hdlr.onBanned(data);\n    });\n  }\n\n  public static setHandlerNickChanged(hdlr: OnNickChanged) {\n    this.nickChanged.subscribe(data => {\n      hdlr.onNickChanged(data);\n    });\n  }\n\n}\n\nexport interface OnNickAlreadyInUse {\n  onNickAlreadyInUse(nickInUse: string);\n}\n\nexport interface OnBanned {\n  onBanned(channel: string);\n}\n\nexport interface OnNickChanged {\n  onNickChanged(nick: NickChange);\n}\n","export class NickChange {\n  oldNick: string;\n  newNick: string;\n  constructor(old: string, nnick: string) {\n    this.oldNick = old;\n    this.newNick = nnick;\n  }\n}\n","export class OriginData {\n  public nick?: string;\n  public identitity?: string;\n  public server: string;\n}\n\nexport class IRCMessage {\n  public origin: OriginData;\n  public simplyOrigin: string;\n  public code: string;\n  public target: string;\n  public message: string;\n  public tag?: string;\n  public body?: string;\n  public partials?: string[];\n}\n","// @dynamic\nexport class ValidRegex {\n\n  public static channelRegex() {\n    return '#([a-zA-Z0-9_#]+)';\n  }\n\n  public static userRegex() {\n    return '([a-zA-Z_][a-zA-Z0-9_]+)'\n  }\n\n  public static actionRegex() {\n    return /\\x01ACTION ([^\\x01]+)\\x01/;\n  }\n\n  public static modeRegex() {\n    return '(\\\\+|\\-)?([a-zA-Z]+)';\n  }\n\n  public static getRegex(regex: string) {\n    return new RegExp(regex);\n  }\n\n  public static pingRegex(nick: string) {\n    return '^(.*(\\\\s|,|:))?('+nick.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')+')((\\\\s|,|:).*)?$';\n  }\n\n}\n","import { EventEmitter } from '@angular/core';\nimport { NewMode } from '../dto/NewMode';\nimport { ValidRegex } from '../utils/validRegex';\n\n/**\n * Clase para gestionar los cambios de modos en un canal (sobre un usuario)\n */\n// @dynamic\nexport class ModeHandler {\n\n  public static readonly modeChange: EventEmitter<NewMode> = new EventEmitter<NewMode>();\n\n  public static modeParser(rawMessage: string): string[] {\n    let modeRaw = rawMessage.split(' MODE ')[1];\n    if(modeRaw.indexOf('#') == -1) {\n      const modeCut = modeRaw.split(':');\n      const regex = ValidRegex.getRegex(ValidRegex.modeRegex()).exec(modeCut[1]);\n      return [\n        undefined,\n        regex[1], // + o -\n        regex[2].trim(), // modo\n        modeCut[0].trim() // usuario\n      ];\n    } else {\n      const regex = ValidRegex.channelRegex()+\n      '\\\\s'+ValidRegex.modeRegex()+'\\\\s\\\\:?'+ // modos\n      ValidRegex.userRegex();\n      const regOut = ValidRegex.getRegex(\n        regex\n      ).exec(modeRaw);\n      if(regOut) {\n        return [\n          undefined,\n          regOut[2],\n          regOut[3].trim(),\n          regOut[4]\n        ];\n      } else {\n        // modo de canal?\n        const modos = modeRaw.split(':');\n        return [\n          undefined,\n          undefined,\n          modos[1],\n          undefined\n        ]\n      }\n    }\n  }\n\n  public static changeMode(mode: NewMode) {\n    this.modeChange.emit(mode);\n  }\n\n}\n","import { Away } from './../dto/Away';\nimport { EventEmitter } from '@angular/core';\n\n/**\n * Handler de mensajes de away\n */\n// @dynamic\nexport class AwayHandler {\n\n  public static readonly awayResponse: EventEmitter<Away> = new EventEmitter<Away>();\n\n  public static onAway(away: Away) {\n    this.awayResponse.emit(away);\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Away } from './../dto/Away';\n\n/**\n * clase para manejar los eventos de ignorar.\n */\n// @dynamic\nexport class IgnoreHandler {\n  public static readonly ignoreResponse: EventEmitter<Away> = new EventEmitter<Away>();\n\n  public static onIgnore(ignore: Away) {\n    this.ignoreResponse.emit(ignore);\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { IRCMessage } from '../utils/IRCMessage.util';\n/**\n * clase para manejar los mensajes del día y el hook para enviar el auth al bouncer\n */\n// @dynamic\nexport class MotdHandler {\n  public static readonly motdResponse: EventEmitter<IRCMessage> = new EventEmitter<IRCMessage>();\n  public static readonly requirePasswordResponse: EventEmitter<IRCMessage> = new EventEmitter<IRCMessage>();\n}\n","/**\n * clase para manejar los cambios de estado de un canal, como el topic y los modos.\n */\n\nimport { EventEmitter } from '@angular/core';\n\n// @dynamic\nexport class ChannelStatusHandler {\n\n  private static readonly channelsTopics: ChannelsTopic = {};\n  public static readonly channelTopicResponse: EventEmitter<ChannelTopicUpdate> = new EventEmitter<ChannelTopicUpdate>();\n\n  public static setChannelTopic(channel: string, topic: string) {\n    this.channelsTopics[channel] = topic;\n    this.channelTopicResponse.emit(new ChannelTopicUpdate(channel, topic));\n  }\n\n  public static getChannelTopic(channel: string) {\n    return this.channelsTopics[channel];\n  }\n\n  public static findChannels(message: string): string[] {\n    let channels = /#([^\\s]+)/g.exec(message) as Array<string>;\n    channels = channels.slice(1);\n    return channels;\n  }\n\n  public static setHandler(hdlr: OnTopicUpdate) {\n    this.channelTopicResponse.subscribe(topic => {\n      hdlr.onTopicUpdate(topic.channel, topic.newTopic);\n    });\n  }\n\n}\n\nexport class ChannelsTopic {\n  [key: string]: string;\n}\n\nexport class ChannelTopicUpdate {\n  channel: string;\n  newTopic: string;\n  constructor(channel: string, newTopic: string) {\n    this.channel = channel;\n    this.newTopic = newTopic;\n  }\n}\n\nexport interface OnTopicUpdate {\n  onTopicUpdate(channel: string, newTopic: string);\n}\n","import { Channel } from './Channel';\nimport { User } from './User';\n\nexport class Part {\n  public user: User;\n  public channel: Channel;\n  public message: string;\n}\n","import { EventEmitter } from '@angular/core';\nimport { Quit } from './../dto/Quit';\n\n// @dynamic\nexport class QuitHandler {\n  public static readonly quitResponse: EventEmitter<Quit> = new EventEmitter<Quit>();\n\n  public static onQuit(quit: Quit) {\n    this.quitResponse.emit(quit);\n  }\n\n  public static setHandler(hdlr: OnQuit) {\n    this.quitResponse.subscribe(data => {\n      hdlr.onQuit(data);\n    });\n  }\n}\n\nexport interface OnQuit {\n  onQuit(data: Quit);\n}\n","import { User } from './User';\n\nexport class Quit {\n  public user: User;\n  constructor(user: string) {\n    this.user = new User(user);\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Join } from './../dto/Join';\n\n// @dynamic\nexport class JoinHandler {\n  public static readonly joinResponse: EventEmitter<Join> = new EventEmitter<Join>();\n\n  public static onJoin(join: Join) {\n    this.joinResponse.emit(join);\n  }\n\n  public static setHandler(hdlr: OnJoin) {\n    this.joinResponse.subscribe((join: Join) => {\n      hdlr.onJoin(join);\n    });\n  }\n}\n\nexport interface OnJoin {\n  onJoin(data: Join);\n}\n","import { EventEmitter } from '@angular/core';\nimport { IRCMessage } from '../utils/IRCMessage.util';\n\n// @dynamic\nexport class ServerHandler {\n  public static readonly serverResponse: EventEmitter<IRCMessage> = new EventEmitter<IRCMessage>();\n  public static readonly serverNoticeResponse: EventEmitter<IRCMessage> = new EventEmitter<IRCMessage>();\n\n  public static onServerResponse(msg: IRCMessage) {\n    this.serverResponse.emit(msg);\n  }\n\n  public static onServerNoticeResponse(msg: IRCMessage) {\n    this.serverNoticeResponse.emit(msg);\n  }\n}\n","import { IndividualMessage } from './../dto/IndividualMessage';\nimport { IRCMessage } from '../utils/IRCMessage.util';\nimport { EventEmitter } from '@angular/core';\nimport { ValidRegex } from '../utils/validRegex';\n\n/**\n * Clase para manejar la recepción de mensajes privados y de canal.\n */\n// @dynamic\nexport class MessageHandler {\n\n  public static readonly messageResponse: EventEmitter<IndividualMessage> = new EventEmitter<IndividualMessage>();\n\n  public static onMessage(message: IndividualMessage) {\n    this.messageResponse.emit(message);\n  }\n\n  public static getMeAction(parsedMessage: IRCMessage): string[] {\n    return ValidRegex.actionRegex().exec(parsedMessage.message);\n  }\n\n  public static setHandler(hdlr: OnMessageReceived) {\n    this.messageResponse.subscribe(message => {\n      hdlr.onMessageReceived(message);\n    });\n  }\n\n}\n\nexport interface OnMessageReceived {\n  onMessageReceived(message: IndividualMessage);\n}\n","import { MessageWithMetadata } from '../utils/PostProcessor';\n\nexport class IndividualMessage {\n  messageType: IndividualMessageTypes;\n  author: string;\n  message: string;\n  richMessage?: MessageWithMetadata;\n  meAction: boolean;\n  specialAction?: boolean;\n  isAwayNotify?: boolean;\n  time?: string;\n  date?: string;\n  channel?: string;\n  mention?: boolean;\n  fromLog?: boolean;\n  privateAuthor?: string; // when i send private message my nick is here.\n}\n\nexport enum IndividualMessageTypes {\n  PRIVMSG,\n  CHANMSG,\n  NOTIFY // notificación contra un canal.\n}\n","export class Time {\n  public static getTime(): string {\n    const now = new Date();\n    const hours = now.getHours() < 10 ? '0' + now.getHours() : now.getHours();\n    const min = now.getMinutes() < 10 ? '0' + now.getMinutes() : now.getMinutes();\n    const second = now.getSeconds() < 10 ? '0' + now.getSeconds() : now.getSeconds();\n    return hours + ':' + min + ':' + second;\n  }\n\n  public static getDateStr(): string {\n    const now = new Date();\n    const month = (now.getMonth() + 1);\n    const monthStr = month < 10 ? '0' + month : month;\n    const day = now.getDate();\n    const dayStr = day < 10 ? '0' + day : day;\n    return dayStr + '/' + monthStr + '/' + now.getFullYear();\n  }\n}\n","import { IRCMessage } from './../utils/IRCMessage.util';\nimport { EventEmitter } from '@angular/core';\n\n// @dynamic\nexport class ModeratedHandler {\n  public static readonly channelModerated: EventEmitter<IRCMessage> = new EventEmitter<IRCMessage>();\n}\n","import { Join } from './dto/Join';\nimport { PartHandler } from './handlers/Part.handler';\nimport { KickInfo } from './dto/KickInfo';\nimport { KickHandler } from './handlers/Kick.handler';\nimport { Away } from './dto/Away';\nimport { NewMode } from './dto/NewMode';\nimport { GmodeHandler } from './handlers/Gmode.handler';\nimport { Channel } from './dto/Channel';\nimport { ChannelListHandler } from './handlers/ChannelList.handler';\nimport { WhoIsHandler } from './handlers/Whois.handler';\nimport { WhoHandler } from './handlers/Who.handler';\nimport { Who } from './dto/Who';\nimport { UModes } from './utils/UModes.utils';\nimport { UsersHandler } from './handlers/Users.handler';\nimport { UserInChannel } from './dto/UserInChannel';\nimport { ListHandler } from './handlers/List.handler';\nimport { ChannelInfo } from './dto/ChannelInfo';\nimport { StatusHandler } from './handlers/Status.handler';\nimport { NickChange } from './dto/NickChange';\nimport { IRCMessage, OriginData } from './utils/IRCMessage.util';\nimport { ModeHandler } from './handlers/Mode.handler';\nimport { User } from './dto/User';\nimport { AwayHandler } from './handlers/Away.handler';\nimport { IgnoreHandler } from './handlers/Ignore.Handler';\nimport { MotdHandler } from './handlers/Motd.handler';\nimport { ChannelStatusHandler } from './handlers/ChannelStatus.handler';\nimport { Part } from './dto/Part';\nimport { QuitHandler } from './handlers/Quit.handler';\nimport { Quit } from './dto/Quit';\nimport { JoinHandler } from './handlers/Join.handler';\nimport { ServerHandler } from './handlers/Server.handler';\nimport { MessageHandler } from './handlers/Message.handler';\nimport { IndividualMessage, IndividualMessageTypes } from './dto/IndividualMessage';\nimport { Time } from './utils/Time.util';\nimport { ModeratedHandler } from './handlers/Moderated.handler';\n\nexport class IRCParserV2 {\n\n  public static parseMessage(message: string): IRCMessage[] {\n      const out = [];\n      message.split('\\r\\n').forEach(msgLine => {\n          const r = /:([^:]+):?(.*)/.exec(msgLine);\n          const TAG = r[1];\n          const MSG = r[2];\n          const partials = TAG.split(' ');\n          const im = new IRCMessage();\n          im.body = MSG;\n          im.tag = TAG;\n          im.partials = partials;\n          im.code = partials[1];\n          const target = /([^!]*!)?([^@]+@)?(.*)/.exec(partials[0]);\n          const od = new OriginData();\n          if (!target[2]) {\n              od.server = target[1];\n              im.simplyOrigin = od.server;\n          } else if (!target[3]) {\n              od.server = target[2];\n              od.identitity = target[1].slice(0, target[1].length - 1);\n              im.simplyOrigin = od.identitity;\n          } else {\n              od.server = target[3];\n              od.identitity = target[2].slice(0, target[1].length - 1);\n              od.nick = target[1].slice(0, target[1].length - 1);\n              im.simplyOrigin = od.nick;\n          }\n          im.origin = od;\n          im.target = partials[2];\n          im.message = MSG;\n          out.push(im);\n      });\n      return out;\n  }\n\n  public static processMessage(parsedMessage: IRCMessage, rawMessage: string, actualNick: string): void {\n\n    if (parsedMessage.code === '319') { // lista de canales\n      const chnlList = [];\n      parsedMessage.message.split(' ').forEach(pmChnl => {\n        const chnl = new Channel(pmChnl);\n        chnlList.push(chnl);\n      });\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'channelList', chnlList);\n      ChannelListHandler.setChannelList(parsedMessage.partials[3], chnlList);\n      return;\n    }\n\n    if (parsedMessage.code === '718') {\n      // :avalon.hira.io 718 Tulkalex Tulkaz ~Harkito@net-j7j.cur.32.45.IP :is messaging you, and you have user mode +g set.\n      // Use /ACCEPT +Tulkaz to allow.\n      GmodeHandler.privateRequest(parsedMessage.partials[3]);\n      return;\n    }\n\n    if (parsedMessage.code === '378') {\n      // connecting from\n      // :avalon.hira.io 378 Tulkalex Tulkalex :is connecting from ~Tulkalandi@167.99.172.78 167.99.172.78\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'connectedFrom', parsedMessage.body.replace('is connecting from ', ''));\n      return;\n    }\n    if (parsedMessage.code === '312') {\n      // server desde donde está conectado\n      // :avalon.hira.io 312 Tulkalex Tulkalex avalon.hira.io :Avalon - Frankfurt, Germany\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'server', parsedMessage.body);\n      return;\n    }\n    if (parsedMessage.code === '313') {\n      // :avalon.hira.io 313 Tulkalex Tulkalex :is a GlobalOp on Hira\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'isGOP', true);\n      return;\n    }\n    if (parsedMessage.code === '379') {\n      // :avalon.hira.io 379 Tulkalex Tulkalex :is using modes +Iiow\n      const modes = parsedMessage.body.split(' ');\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'modes', modes[modes.length - 1]);\n      return;\n    }\n    if (parsedMessage.code === '330') {\n      // :avalon.hira.io 330 Tulkalex Tulkalex alexander1712 :is logged in as\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'userAccount', parsedMessage.partials[4]);\n      return;\n    }\n    if (parsedMessage.code === '671') {\n      // :avalon.hira.io 671 Tulkalex Tulkalex :is using a secure connection\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'isSecured', true);\n      return;\n    }\n    if (parsedMessage.code === '317') {\n      // :avalon.hira.io 317 Tulkalex Tulkalex 6318 1602266231 :seconds idle, signon time\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'idle', parsedMessage.partials[4]);\n      WhoIsHandler.addWhoisPartial(parsedMessage.partials[3], 'lastLogin', parsedMessage.partials[5]);\n      return;\n    }\n\n    if (parsedMessage.code === '318') {\n      WhoIsHandler.finalWhoisMessage(parsedMessage.partials[3]);\n      return;\n    }\n\n    if (parsedMessage.code === '352') { // user info (WHO response)\n      const data = WhoHandler.WHOUserParser(rawMessage);\n      if (data) {\n        const whoData = new Who();\n        whoData.serverFrom = data[7];\n        whoData.nick = data[8];\n        whoData.isAway = data[9] === 'G';\n        whoData.isNetOp = data[10] === '*';\n        whoData.rawMsg = rawMessage;\n        const mod = data[11];\n        if (mod === '~') {\n          whoData.mode = UModes.FOUNDER;\n        } else if (mod === '&') {\n          whoData.mode = UModes.ADMIN;\n        } else if (mod === '@') {\n          whoData.mode = UModes.OPER;\n        } else if (mod === '%') {\n          whoData.mode = UModes.HALFOPER;\n        } else if (mod === '+') {\n          whoData.mode = UModes.VOICE;\n        }\n        WhoHandler.addWhoData(data[8], whoData);\n      } else {\n        console.error('BAD WHO RESPONSE PARSED: ', rawMessage, data);\n      }\n      return;\n    }\n\n    if (parsedMessage.code === '353') { // names\n      const channel = UsersHandler.getChannelOfMessage(rawMessage);\n      const users = parsedMessage.message.trim().split(' ');\n      const usersInChannel: UserInChannel[] = [];\n      users.forEach(user => {\n        usersInChannel.push(new UserInChannel(user, channel));\n      });\n      const chnlObj = new Channel(channel);\n      UsersHandler.addUsersToChannel(chnlObj.name, usersInChannel);\n      return;\n    }\n\n    // 321 inicio lista de canales (borrar)\n    if (parsedMessage.code === '321') {\n      ListHandler.newChannelList();\n      return;\n    }\n\n    // 322 canal de lista de canales\n    if (parsedMessage.code === '322') {\n      const body = parsedMessage.body.split(']');\n      ListHandler.addChannels(new ChannelInfo(parsedMessage.partials[3].slice(1), body[1], body[0].replace('[' , ''), parseInt(parsedMessage.partials[4])));\n      return;\n    }\n\n    if (parsedMessage.code === '433') { // nick already in use\n      // TODO: obtener nick anterior.\n      StatusHandler.onNickAlreadyInUse('');\n      return;\n    }\n\n    if (parsedMessage.code === '474') {\n      // TODO: obtener canal.\n      StatusHandler.onBanned('');\n      return;\n    }\n\n    if (parsedMessage.code === 'NICK') {\n      StatusHandler.onNickChanged(\n        new NickChange(parsedMessage.simplyOrigin, parsedMessage.target ? parsedMessage.target : parsedMessage.message)\n      );\n      return;\n    }\n\n    if (parsedMessage.code === 'MODE') {\n      const mode = ModeHandler.modeParser(rawMessage);\n      if(mode[3]) {\n        const nmode = new NewMode();\n        nmode.userTarget = new User(mode[3]);\n        nmode.channelTarget = parsedMessage.target;\n        nmode.modeAdded = mode[1] === '+';\n        nmode.mode = mode[2];\n        ModeHandler.changeMode(nmode);\n      } else {\n        const nmode = new NewMode();\n        nmode.channelTarget = parsedMessage.target;\n        nmode.userTarget = new User(parsedMessage.target);\n        nmode.mode = mode[2];\n        ModeHandler.changeMode(nmode);\n      }\n      return;\n    }\n\n    if (parsedMessage.code === '301') { // away message\n      const away = new Away();\n      away.author = parsedMessage.partials[3];\n      away.message = parsedMessage.message;\n      AwayHandler.onAway(away);\n      return;\n    }\n\n    if (parsedMessage.code === '716') { // server side ignored\n      const ignore = new Away();\n      ignore.author = parsedMessage.partials[3];\n      ignore.message = parsedMessage.message;\n      IgnoreHandler.onIgnore(ignore);\n    }\n\n    if (parsedMessage.code === '464') {\n      MotdHandler.requirePasswordResponse.emit(parsedMessage);\n      return;\n    }\n\n    if (parsedMessage.code === '404') {\n      ModeratedHandler.channelModerated.emit(parsedMessage);\n      return;\n    }\n\n    if (parsedMessage.code === '375') {\n      MotdHandler.motdResponse.emit(parsedMessage);\n      return;\n    }\n\n    if (parsedMessage.code === 'PONG') {\n      return;\n    }\n\n    if (parsedMessage.code === 'NOTICE') {\n      if (parsedMessage.simplyOrigin && parsedMessage.simplyOrigin !== '*status' && parsedMessage.target[0] === '#') {\n        const message = new IndividualMessage();\n        message.messageType = IndividualMessageTypes.NOTIFY;\n        message.author = parsedMessage.simplyOrigin;\n        message.message = parsedMessage.message;\n        message.meAction = false;\n        message.channel = parsedMessage.target;\n        message.time = Time.getTime();\n        message.date = Time.getDateStr();\n        MessageHandler.onMessage(message);\n        return;\n      } else {\n        ServerHandler.onServerNoticeResponse(parsedMessage);\n        return;\n      }\n    }\n\n    if (parsedMessage.code === '332') {\n      const channels = ChannelStatusHandler.findChannels(rawMessage);\n      ChannelStatusHandler.setChannelTopic(channels[0], parsedMessage.message);\n      return;\n    }\n\n    if (parsedMessage.code === 'TOPIC') {\n      ChannelStatusHandler.setChannelTopic(parsedMessage.target, parsedMessage.message);\n      return;\n    }\n\n    if (parsedMessage.code === '315') {\n      // TODO: check this... End of who\n      return;\n    }\n\n    if (parsedMessage.code === 'KICK') {\n      let channel = parsedMessage.target;\n      const kickData = KickHandler.kickParse(rawMessage);\n      const kickInfo = new KickInfo();\n      kickInfo.channel = new Channel(channel);\n      kickInfo.operator = parsedMessage.message;\n      kickInfo.userTarget = new User(kickData[2]);\n      KickHandler.onKick(kickInfo);\n    }\n\n    if (parsedMessage.code === 'PART') {\n      // :Harko!~Harkolandia@harkonidaz.irc.tandilserver.com PART #SniferL4bs :\"Leaving\"\n      let channel = parsedMessage.target;\n      if (!channel) {\n        channel = parsedMessage.message;\n      }\n      const part = new Part();\n      part.channel = new Channel(channel);\n      part.message = parsedMessage.message;\n      part.user = new User(parsedMessage.simplyOrigin);\n      PartHandler.onPart(part);\n    }\n\n    if (parsedMessage.code === 'QUIT') {\n      QuitHandler.onQuit(new Quit(parsedMessage.simplyOrigin));\n    }\n\n    if (parsedMessage.code === 'JOIN') {\n      const join = new Join();\n      const channel = parsedMessage.message ? parsedMessage.message : parsedMessage.target;\n      join.channel = new Channel(channel);\n      join.user = new User(parsedMessage.simplyOrigin);\n      join.origin = parsedMessage.origin;\n      JoinHandler.onJoin(join);\n    }\n\n    if (parsedMessage.code === 'PRIVMSG') {\n      const meMsg = MessageHandler.getMeAction(parsedMessage);\n      const message = new IndividualMessage();\n      message.author = parsedMessage.simplyOrigin;\n      if (meMsg) {\n        message.message = meMsg[1];\n        message.meAction = true;\n      } else {\n        message.message = parsedMessage.message;\n        message.meAction = false;\n      }\n      message.time = Time.getTime();\n      message.date = Time.getDateStr();\n      if (parsedMessage.target === actualNick) { // privado\n        message.messageType = IndividualMessageTypes.PRIVMSG;\n      } else {\n        message.messageType = IndividualMessageTypes.CHANMSG;\n        message.channel = parsedMessage.target;\n      }\n      message.mention = message.message ? message.message.indexOf(actualNick) >= 0 : false;\n      MessageHandler.onMessage(message);\n      return;\n    }\n\n    ServerHandler.onServerResponse(parsedMessage);\n    return;\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class IRCoreModule { }\n","import {webSocket, WebSocketSubject} from 'rxjs/webSocket';\nimport { Observable, Subject } from 'rxjs';\nimport { EventEmitter } from '@angular/core';\n\nexport class WebSocketUtil {\n\n  public static readonly messageReceived = new EventEmitter<MessageData>();\n  public static readonly statusChanged = new EventEmitter<ConnectionStatusData<any>>();\n\n  private wss: WebSocketSubject<string>;\n  private readonly onOpenSubject = new Subject();\n  private readonly onCloseSubject = new Subject();\n\n  private static connected: boolean = false;\n\n  connect(url: string, uuid: string): Observable<string> {\n      this.wss = webSocket<string>({\n        url,\n        serializer: msg => msg,\n        deserializer: msg => msg.data,\n        openObserver: this.onOpenSubject,\n        closeObserver: this.onCloseSubject\n      });\n      const obs = this.wss.asObservable();\n      obs.subscribe(msg => {\n        WebSocketUtil.messageReceived.emit(new MessageData(uuid, msg));\n      },\n      err => {\n        const status = new ConnectionStatusData<any>();\n        status.status = ConnectionStatus.ERROR;\n        status.data = {uuid, err};\n        console.error('WS errror?', status.data);\n        WebSocketUtil.statusChanged.emit(status);\n        WebSocketUtil.connected = false;\n      });\n      this.onCloseSubject.subscribe(() => {\n        const status = new ConnectionStatusData<string>();\n        status.status = ConnectionStatus.DISCONNECTED;\n        status.data = uuid;\n        WebSocketUtil.statusChanged.emit(status);\n        WebSocketUtil.connected = false;\n      });\n      this.onOpenSubject.subscribe(() => {\n        const status = new ConnectionStatusData<string>();\n        status.status = ConnectionStatus.CONNECTED;\n        status.data = uuid;\n        WebSocketUtil.statusChanged.emit(status);\n        WebSocketUtil.connected = true;\n      });\n      return obs;\n  }\n\n  public send(msg: string) {\n      this.wss.next(msg);\n  }\n\n  public disconnect() {\n    this.wss.complete();\n  }\n\n  public static isConnected() {\n    return WebSocketUtil.connected;\n  }\n\n}\n\nexport class ConnectionStatusData<t> {\n  status: ConnectionStatus;\n  data: t;\n}\n\nexport enum ConnectionStatus {\n  CONNECTED,\n  DISCONNECTED,\n  ERROR\n}\n\nexport class MessageData {\n  uuid: string;\n  message: string;\n  constructor(uuid: string, message: string) {\n    this.uuid = uuid;\n    this.message = message;\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { NickChange } from '../dto/NickChange';\nimport { OnNickChanged, StatusHandler } from '../handlers/Status.handler';\n\n/**\n * Servicio para gestionar mi información\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserInfoService implements OnNickChanged {\n\n  private actualNick: string;\n  public readonly onChangeNick = new EventEmitter<string>();\n\n  constructor() {\n    StatusHandler.setHandlerNickChanged(this);\n  }\n\n  public getNick(): string {\n    return this.actualNick;\n  }\n\n  public setNick(nick: string) {\n    this.actualNick = nick;\n    this.onChangeNick.emit(nick);\n  }\n\n  onNickChanged(nick: NickChange) {\n    if (nick.oldNick === this.actualNick) {\n      this.actualNick = nick.newNick;\n    }\n  }\n\n}\n","import { MessageData, WebSocketUtil } from './utils/WebSocket.util';\nimport { Injectable } from '@angular/core';\nimport { IRCParserV2 } from './IRCParserV2';\nimport { UserInfoService } from './services/user-info.service';\nimport { IndividualMessage, IndividualMessageTypes } from './dto/IndividualMessage';\nimport { Time } from './utils/Time.util';\nimport { MessageHandler } from './handlers/Message.handler';\n\ndeclare var stopEff;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IRCoreService {\n\n  public static clientName = 'IRCoreV2';\n\n  private webSocket: WebSocketUtil;\n\n  constructor(private userSrv: UserInfoService) {\n    WebSocketUtil.messageReceived.subscribe((message: MessageData) => {\n      if (message.message.indexOf('PING') === 0) {\n        const pingResp = message.message.slice(5);\n        this.sendRaw('PONG ' + pingResp);\n        return;\n      }\n      if (message.message.indexOf('ERROR') === 0) {\n        console.error('Received error from stream: ', message.message);\n        return;\n      }\n      IRCParserV2.parseMessage(message.message).forEach(msg => {\n        IRCParserV2.processMessage(msg, message.message, this.userSrv.getNick());\n      });\n    });\n  }\n\n  public connect(url: string) {\n    this.webSocket = new WebSocketUtil();\n    this.webSocket.connect(url, 'WSocket');\n  }\n\n  public handshake(username: string, apodo: string, gatwayHost?: string) {\n    this.sendRaw('ENCODING UTF-8');\n    if (gatwayHost) {\n      this.sendRaw('HOST ' + gatwayHost);\n    }\n    this.sendRaw('USER ' + username + ' * * :' + IRCoreService.clientName);\n    this.setNick(apodo);\n  }\n\n  public identify(password: string) {\n    this.sendRaw('PRIVMSG NickServ identify ' + password);\n  }\n\n  public serverPass(user: string, password: string) {\n    this.sendRaw('PASS ' + user + ':' + password);\n  }\n\n  public setNick(nick: string) {\n    this.sendRaw('NICK ' + nick);\n    this.userSrv.setNick(nick);\n  }\n\n  public sendWhox(channel) {\n    channel = channel[0] === '#' ? channel : '#' + channel;\n    this.sendRaw('WHO ' + channel);\n  }\n\n  public join(channel: string) {\n    if(channel[0] != '#') {\n      channel = '#' + channel;\n    }\n    this.sendRaw('JOIN ' + channel)\n  }\n\n  public disconnect(): void {\n    this.webSocket.disconnect();\n  }\n\n  public sendRaw(rawMessage: string) {\n    this.webSocket.send(rawMessage);\n  }\n\n  public sendMessageOrCommand(command: string, target?: string): boolean { // return true if is message or false if is command.\n    if (command[0] === '/') {\n      let cmd = command.slice(1);\n      const verb = cmd.split(' ')[0].toLowerCase();\n      if (verb === 'query') {\n        cmd = cmd.slice(5).trim();\n        // TODO: query a cmd\n      }\n      if (verb === 'join') {\n        // enviar cmd esto es un join\n        this.sendRaw(cmd);\n        return false;\n      }\n      if (verb === 'umode') {\n        // enviar cmd esto es un join\n        cmd = cmd.replace('umode', 'mode ' + this.userSrv.getNick());\n      }\n      if (verb === 'stop') {\n        // enviar cmd esto es un join\n        stopEff();\n        return false;\n      }\n      if (verb === 'me') {\n        cmd = cmd.slice(2).trim();\n        this.sendRaw('PRIVMSG ' + target + ' :' + String.fromCharCode(1) + 'ACTION ' + cmd + String.fromCharCode(1));\n        this._triggerMessage(cmd, target, true);\n        return true;\n      }\n      if (verb === 'cs') {\n        // chanserv?\n        cmd = cmd.replace('cs', 'PRIVMSG ChanServ :');\n      }\n      if (verb === 'hc') {\n        // chanserv?\n        cmd = cmd.replace('hc', 'PRIVMSG HiraClient :');\n      }\n      if (verb === 'ns') {\n        // nickserv?\n        cmd = cmd.replace('ns', 'PRIVMSG NickServ :');\n      }\n      if (verb === 'msg') {\n        cmd = cmd.replace('msg', 'PRIVMSG');\n      }\n      if (verb === 'leave') {\n        cmd = cmd.replace('leave', 'PART');\n      }\n      if (verb === 'away') {\n        if (cmd.length === 4) {\n          const now = new Date();\n          cmd += ' AFK desde ' + now.getDay() + '/' + (now.getMonth() + 1) + '/' + now.getFullYear() + ' ' +\n                  now.getHours() + ':' + now.getMinutes();\n        }\n      }\n      if (verb === 'back') {\n        cmd = cmd.replace('back', 'away');\n      }\n      this.sendRaw(cmd);\n      return false;\n    } else {\n      if(target) {\n        this.sendRaw('PRIVMSG ' + target + ' :' + command);\n        this._triggerMessage(command, target, false);\n      } else {\n        this.sendRaw(command);\n      }\n      return true;\n    }\n  }\n\n  private _triggerMessage(command: string, target: string, isMe: boolean) {\n    const iMessage = new IndividualMessage();\n    iMessage.author = this.userSrv.getNick();\n    iMessage.message = command;\n    iMessage.meAction = isMe;\n    iMessage.date = Time.getDateStr();\n    iMessage.time = Time.getTime();\n    iMessage.messageType = target[0] == '#' ? IndividualMessageTypes.CHANMSG : IndividualMessageTypes.PRIVMSG;\n    if(iMessage.messageType === IndividualMessageTypes.CHANMSG) {\n      iMessage.channel = target;\n    } else {\n      iMessage.privateAuthor = iMessage.author;\n      iMessage.author = target;\n    }\n    MessageHandler.onMessage(iMessage);\n  }\n\n  public getWS(): WebSocketUtil{\n    return this.webSocket;\n  }\n}\n","// @dynamic\nexport class AvatarHelper {\n\n  private static avatarURL: string;\n\n  public static setAvatarURL(url: string) {\n    this.avatarURL = url;\n  }\n\n  public static getAvatarURL(): string {\n    return this.avatarURL;\n  }\n\n}\n","import { AvatarHelper } from './../helpers/avatar.helper';\nimport { MessageWithMetadata } from './../utils/PostProcessor';\nimport { User } from '../dto/User';\n\nexport class ChannelData {\n  name: string;\n  topic: string;\n  users: User[] = [];\n  messages: GenericMessage[] = [];\n}\n\nexport class GenericMessage {\n  message: string;\n  author?: Author<User | string>;\n  date: string;\n  special: boolean; // for actions \"me\"\n  notify?: boolean; // for server message\n  quote?: Quote;\n\n  // post-loaded\n  messageWithMetadata?: MessageWithMetadata;\n  target?: string; // nombre del chat o conversación\n  fromHistory?: boolean;\n}\n\nexport class Quote {\n  author: string | User;\n  quote: string;\n}\n\nexport class Author<t> {\n  user: t;\n  image: string;\n\n  constructor(user: t) {\n    let imageURL = AvatarHelper.getAvatarURL();\n    if(typeof user == 'string') {\n      this.image = imageURL + user;\n    } else {\n      this.image = imageURL + (user as any).nick;\n    }\n    this.user = user;\n  }\n}\n","declare var startEventEffect: any;\ndeclare var startEventEffectRegalo: any;\ndeclare var startEventEffectMeteor: any;\ndeclare var startEventEffectCabritas: any;\ndeclare var startEventEffectPrimavera: any;\ndeclare var startEventEffectVerano: any;\ndeclare var startEventEffectOtono: any;\ndeclare var startEventEffectKz2s: any;\n\nexport class EmoteList {\n\n  public static readonly facesLocation = 'assets/faces/';\n  public static readonly specialLocation = 'assets/specials/';\n  public static readonly facesExtension = '.png';\n  public static readonly memesLocation = 'assets/em-mem/';\n  public static readonly memesExtension = '';\n\n  public static readonly specialFaces = {\n    'Gabriela-': [\n      'regla',\n      'magico',\n      'stamp'\n    ],\n    Polsaker: [\n      'stamp'\n    ]\n  };\n\n  public static readonly faces = [\n    'aaa',\n    'break',\n    'chaky',\n    'challenge',\n    'cry',\n    'ehh',\n    'facepalm',\n    'fap',\n    'fffpf',\n    'fu',\n    'fuckyeah',\n    'genius',\n    'hmmm',\n    'hpm',\n    'jij',\n    'laugh',\n    'LOL',\n    'magicBook',\n    'magicCircle',\n    'magicDrug',\n    'magichat',\n    'no',\n    'oka',\n    'rage',\n    'siuu',\n    'sparkle',\n    'stickmagic',\n    'stickmagic2',\n    'trollface',\n    'mog',\n    'why',\n    'WitchHat',\n    'why',\n    'yao',\n    'true',\n    'amazing',\n    'forever',\n    'notbad',\n    'brindis',\n    'buttcoin',\n    'cigar',\n    'cigar2',\n    'coffee',\n    'coffee2',\n    'coffee3',\n    'goatman',\n    'hacker',\n    'service',\n    'stick',\n    'wine',\n    'wineBottle',\n    'escoba',\n    'principito',\n    'baskerville',\n    'cumple',\n    'cumple2',\n    'abrazo',\n    'agua1',\n    'agua2',\n    'angry',\n    'barco',\n    'eagle',\n    'fatcat',\n    'fox',\n    'handshake',\n    'kiss',\n    'rose',\n    'tarta',\n    'te',\n    'whisky',\n    'zumo',\n    'burger',\n    'candy',\n    'caniche',\n    'celtic',\n    'coca',\n    'editorial',\n    'gaviota',\n    'goat',\n    'icecream',\n    'listado',\n    'magicwind',\n    'medal',\n    'musical',\n    'palette',\n    'pizza',\n    'podium',\n    'batido',\n    'fresas',\n    'wizard',\n    'xane'\n  ];\n\n  public static readonly memes = [\n    'baneo',\n    'baneo2',\n    'baneo3',\n    'buscar',\n    'buscar2',\n    'comunicacion',\n    'despedida',\n    'expulsar',\n    'hacker',\n    'hacker2',\n    'hacker3',\n    'hacker4',\n    'hacker5',\n    'hacker6',\n    'hacker7',\n    'hacker8',\n    'hacker9',\n    'hacker10',\n    'hacker11',\n    'hacker12',\n    'impuestos',\n    'impuestos2',\n    'llegada',\n    'magia',\n    'magia2',\n    'magia3',\n    'magia4',\n    'magia5',\n    'magia6',\n    'nopreguntas',\n    'nopreguntas2',\n    'topic',\n    'topic2'\n  ];\n\n  public static getMeme(name: string, author: string): string {\n    if (this.memes.findIndex(meme => meme === name) >= 0) {\n      return this.memesLocation + name + this.memesExtension;\n    } else {\n      return undefined;\n    }\n  }\n\n  public static getFace(name: string, author: string): string {\n    if (this.faces.findIndex(meme => meme === name) >= 0) {\n      return this.facesLocation + name + this.facesExtension;\n    } else if (this.specialFaces[author] &&\n               this.specialFaces[author].findIndex(meme => meme === name) >= 0) {\n      return this.specialLocation + name + this.facesExtension;\n    } else if (author === 'Gabriela-') {\n      if (name === 'magia') {\n        startEventEffect();\n      }\n      if (name === 'primavera') {\n        startEventEffectPrimavera();\n      }\n      if (name === 'verano') {\n        startEventEffectVerano();\n      }\n      if (name === 'otono') {\n        startEventEffectOtono();\n      }\n      if (name === 'cabritas') {\n        startEventEffectCabritas();\n      }\n      if (name === 'regalos') {\n        startEventEffectRegalo();\n      }\n      if (name === 'lluvia') {\n        startEventEffectMeteor();\n      }\n      if (name === 'kz2') {\n        startEventEffectKz2s();\n      }\n      return undefined;\n    } else if (author === 'Alex' || author === 'Tulkalex' || author === 'Tulkalen') {\n      if (name === 'kz2') {\n        startEventEffectKz2s(); // Probando\n      }\n      return undefined;\n    } else {\n      return undefined;\n    }\n  }\n}\n","import { EmoteList } from './EmoteList';\nimport { ValidRegex } from './validRegex';\n\nexport class PostProcessor {\n\n  public static processMessage(message: string, author: string, me: string): MessageWithMetadata {\n    const mwm = new MessageWithMetadata();\n\n    const youtubeLink = /((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?/.exec(message);\n    if (youtubeLink) {\n      message = message.replace(youtubeLink[0], '');\n      mwm.youtube = youtubeLink[5];\n    }\n    const imageLink = /(http(s?):)([\\/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/.exec(message);\n    if (imageLink) {\n      message = message.replace(imageLink[0], '');\n      mwm.image = imageLink[0];\n    }\n    const otherLink = /(http|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])?/.exec(message);\n    if (otherLink) {\n      message = message.replace(otherLink[0], '');\n      mwm.link = otherLink[0];\n    }\n    const quote = /^<([^>]+)>\\s([^|]+)\\|?(.*)$/.exec(message);\n    if (quote) {\n      mwm.quote = {\n        author: quote[1],\n        originalMessage: quote[2]\n      };\n      message = quote[3];\n    }\n\n    // prevent XSS:\n    const temp = document.createElement('div');\n    temp.textContent = message;\n    message = temp.innerHTML;\n    // end of xss prevention\n\n    // replacing memes\n    const faces = message.match(/:([a-zA-Z0-9]+):/g);\n    if (faces) {\n      faces.forEach(face => {\n        const realName = face.replace(':', '').replace(':', '');\n        const realLocation = EmoteList.getFace(realName, author);\n        if (realLocation) {\n          message = message.replace(face, '<img src=\"' + realLocation + '\" class=\"faceEmote ' + realName + '\" data-name=\"' +\n                                          realName + '\" title=\":' + realName + '\" alt=\":' + realName + '\"/>');\n        }\n      });\n    }\n\n    const memes = message.match(/;([a-zA-Z0-9]+);/g);\n    if (memes) {\n      memes.forEach(meme => {\n        const realName = meme.replace(';', '').replace(';', '');\n        const realLocation = EmoteList.getMeme(realName, author);\n        if (realLocation) {\n          message = message.replace(meme, '<img src=\"' + realLocation + '\" class=\"memeEmote ' + realName + '\" data-name=\"' + realName +\n                                          '\" title=\";' + realName + '\" alt=\";' + realName + '\"/>');\n        }\n      });\n    }\n\n    mwm.message = PostProcessor.processPings(message, me);\n    return mwm;\n  }\n\n  public static processPings(mwm: string, me: string) {\n    const regex = ValidRegex.getRegex(ValidRegex.pingRegex(me));\n    const result = regex.exec(mwm);\n    if(result) {\n      mwm = '';\n      if(result[1]) {\n        mwm += result[1];\n      }\n      if(result[2]) {\n        mwm += result[2];\n      }\n      mwm += '<b class=\"ping\">' + result[3] + '</b>';\n      if(result[4]) {\n        mwm += result[4];\n      }\n      if(result[5]) {\n        mwm += result[5];\n      }\n      mwm = mwm.replace(', ,', ',');\n    }\n    return mwm;\n  }\n\n  public static deconverHTML(msg: string): string {\n    const matchs = msg.match(/\\<img\\ssrc\\=\\\"([^\"]+)\\\"\\sclass\\=\\\"([^\"]+)\\\"\\sdata-name=\"([^\"]+)\"\\stitle=\"([^\"]+)\"\\salt=\"([^\"]+)\"\\/\\>/g);\n    if (matchs) {\n      matchs.forEach(match => {\n        const data = /\\<img\\ssrc\\=\\\"([^\"]+)\\\"\\sclass\\=\\\"([^\"]+)\\\"\\sdata-name=\"([^\"]+)\"\\stitle=\"([^\"]+)\"\\salt=\"([^\"]+)\"\\/\\>/.exec(match);\n        msg = msg.replace(data[0], data[4]);\n      });\n    }\n    return msg;\n  }\n\n  public static processUserMetadata(user: string): UserWithMetadata {\n    const mod = user[0];\n    if (mod === '~' ||\n        mod === '&' ||\n        mod === '@' ||\n        mod === '%' ||\n        mod === '+') {\n      user = user.slice(1);\n    }\n    const out = new UserWithMetadata();\n    out.nick = user;\n    if (mod === '~') {\n      out.status = UserStatuses.FOUNDER;\n    } else if (mod === '&') {\n      out.status = UserStatuses.NET_OPERATOR;\n    } else if (mod === '@') {\n      out.status = UserStatuses.OPERATOR;\n    } else if (mod === '%') {\n      out.status = UserStatuses.HALF_OPERATOR;\n    } else if (mod === '+') {\n      out.status = UserStatuses.VOICE;\n    }\n    return out;\n  }\n\n}\n\n\nexport class UserWithMetadata {\n  public nick: string;\n  public status: UserStatuses;\n  public isNetOp?: boolean;\n  public randomB?: boolean;\n  public away?: boolean;\n  public serverConnected?: string;\n}\n\nexport class MessageWithMetadata {\n  public message: string;\n  public youtube?: string;\n  public image?: string;\n  public link?: string;\n  public quote?: QuoteMessage;\n}\n\nexport class QuoteMessage {\n  public author: string;\n  public originalMessage: string;\n}\n\nexport enum UserStatuses {\n  FOUNDER = 'FOUNDER',\n  NET_OPERATOR = 'NET_OPERATOR',\n  OPERATOR = 'OPERATOR',\n  HALF_OPERATOR = 'HALF_OPERATOR',\n  VOICE = 'VOICE',\n  BANNED = 'BANNED'\n}\n","import { Time } from './../utils/Time.util';\nimport { ModeHandler } from './../handlers/Mode.handler';\nimport { IndividualMessage, IndividualMessageTypes } from './../dto/IndividualMessage';\nimport { MessageHandler, OnMessageReceived } from './../handlers/Message.handler';\nimport { UserInfoService } from './user-info.service';\nimport { OnTopicUpdate } from './../handlers/ChannelStatus.handler';\nimport { ChannelListHandler, OnChannelList } from './../handlers/ChannelList.handler';\nimport { OnUserList, UsersHandler } from './../handlers/Users.handler';\nimport { PartHandler } from './../handlers/Part.handler';\nimport { KickHandler, OnKick } from './../handlers/Kick.handler';\nimport { JoinHandler, OnJoin } from './../handlers/Join.handler';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Author, ChannelData, GenericMessage } from './ChannelData';\nimport { Join } from '../dto/Join';\nimport { OnPart } from '../handlers/Part.handler';\nimport { Part } from '../dto/Part';\nimport { KickInfo } from '../dto/KickInfo';\nimport { UserInChannel } from '../dto/UserInChannel';\nimport { Channel } from '../dto/Channel';\nimport { OnNickChanged, StatusHandler } from '../handlers/Status.handler';\nimport { NickChange } from '../dto/NickChange';\nimport { User } from '../dto/User';\nimport { ChannelStatusHandler } from '../handlers/ChannelStatus.handler';\nimport { NewMode } from '../dto/NewMode';\nimport { UModes } from '../utils/UModes.utils';\nimport { PostProcessor } from '../utils/PostProcessor';\nimport { ModeratedHandler } from '../handlers/Moderated.handler';\n\n/**\n * Servicio para gestionar mis canales y los usuarios en esos canales\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChannelsService implements OnJoin, OnPart, OnKick, OnUserList, OnChannelList, OnNickChanged, OnTopicUpdate, OnMessageReceived {\n\n  public readonly listChanged: EventEmitter<ChannelData[]> = new EventEmitter<ChannelData[]>();\n  public readonly messagesReceived: EventEmitter<GenericMessage> = new EventEmitter<GenericMessage>();\n  public readonly membersChanged: EventEmitter<{channel: string, users: User[]}> = new EventEmitter<{channel: string, users: User[]}>();\n\n  private channels: ChannelData[] = [];\n\n  public history: { [key: string]: GenericMessage[] };\n\n  constructor(private userSrv: UserInfoService) {\n    // Subscribe to events\n    JoinHandler.setHandler(this);\n    KickHandler.setHandler(this);\n    PartHandler.setHandler(this);\n    UsersHandler.setHandler(this);\n    ChannelListHandler.setHandler(this);\n    StatusHandler.setHandlerNickChanged(this);\n    ChannelStatusHandler.setHandler(this);\n    MessageHandler.setHandler(this);\n    ModeratedHandler.channelModerated.subscribe(d => {\n      // canal moderado:\n      const channel = d.partials[3][0] == '#' ? d.partials[3].substring(1) : d.partials[3];\n      const channelObj = this.channels.find(chnl => chnl.name === channel);\n      if(channelObj) {\n        this.sendSpecialMSG(channelObj, d.body);\n      }\n    });\n    ModeHandler.modeChange.subscribe((d: NewMode) => {\n      if(d.channelTarget != d.userTarget.nick) {\n        const channel = d.channelTarget[0] == '#' ? d.channelTarget.substring(1) : d.channelTarget;\n        const channelObj = this.channels.find(chnl => chnl.name === channel);\n        if(channelObj) {\n          const user = channelObj.users.find(user => user.nick === d.userTarget.nick);\n          if(user) {\n            if(d.modeAdded) {\n              if(d.mode.indexOf('q') > -1) {\n                user.mode = UModes.FOUNDER;\n              } else if(d.mode.indexOf('a') > -1 || d.mode.indexOf('A') > -1) {\n                user.mode = UModes.ADMIN;\n              } else if(d.mode.indexOf('o') > -1 || d.mode.indexOf('O') > -1) {\n                user.mode = UModes.OPER;\n              } else if(d.mode.indexOf('h') > -1 || d.mode.indexOf('H') > -1) {\n                user.mode = UModes.HALFOPER;\n              } else if(d.mode.indexOf('v') > -1 || d.mode.indexOf('V') > -1) {\n                user.mode = UModes.VOICE;\n              }\n            } else {\n              user.mode = undefined; // FIXME: acá habría que ver que modos le quedan.\n            }\n            this.membersChanged.emit({\n              channel,\n              users: channelObj.users\n            });\n          }\n\n          const action = d.modeAdded ? 'agregó' : 'quitó';\n          const mod = d.modeAdded ? '+' : '-';\n          this.sendSpecialMSG(channelObj, 'Se ' + action + ' el modo \"' + mod + d.mode + '\" a ' + d.userTarget.nick);\n        }\n      } else {\n        // modo de canal\n        const channel = d.channelTarget[0] == '#' ? d.channelTarget.substring(1) : d.channelTarget;\n        const channelObj = this.channels.find(chnl => chnl.name === channel);\n        if(channelObj) {\n          this.sendSpecialMSG(channelObj, 'Se cambió el modo del canal: ' + d.mode);\n        }\n      }\n    });\n    this.history = JSON.parse(localStorage.getItem('chan_history'));\n    if(!this.history) {\n      this.history = {};\n    }\n  }\n\n  saveHistory(channel: string, msg: GenericMessage) {\n    if (!this.history[channel]) {\n      this.history[channel] = [];\n    }\n    const msC = Object.assign({}, msg);\n    msC.fromHistory = true;\n    this.history[channel].push(msC);\n    localStorage.setItem('chan_history', JSON.stringify(this.history));\n  }\n\n  getHistory(author: string): GenericMessage[] {\n    return this.history[author];\n  }\n\n  onChannelList(user: string, channels: Channel[]) {\n    // actualizamos nuestra lista de canales:\n    if (user === this.userSrv.getNick()) {\n      // agregamos nuevos canales\n      const actualChnls = [];\n      channels.forEach(channel => {\n        const oldChnl = this.channels.find(chnl => chnl.name === channel.name);\n        if (!oldChnl) {\n          this.addChannel(channel.name);\n        }\n        actualChnls.push(channel.name);\n      });\n      // buscamos elementos inexistentes\n      this.channels.forEach((channel, idx) => {\n        if (!actualChnls.find(chName => chName === channel.name)) {\n          this.channels.splice(idx, 1);\n        }\n      });\n      this.listChanged.emit(this.channels);\n    }\n  }\n\n  private addChannel(channel: string) {\n    const nChannel = new ChannelData();\n    nChannel.name = channel;\n    nChannel.topic = ChannelStatusHandler.getChannelTopic(nChannel.name);\n    nChannel.messages = []; // Get from log?\n    this.channels.push(nChannel);\n    return nChannel;\n  }\n\n  onUserList(channel: string, users: UserInChannel[]) {\n    let channelObj = this.channels.find(chnl => chnl.name === channel);\n    // si no existe este canal lo agregamos.\n    if (!channelObj) {\n      channelObj = this.addChannel(channel);\n    }\n    const actualUsers = [];\n    users.forEach(currentUser => {\n      const oldUser = channelObj.users.find(user => user.nick === currentUser.nick);\n      if (!oldUser) {\n        const newUser = new User(currentUser.nick);\n        newUser.mode = currentUser.mode;\n        channelObj.users.push(newUser);\n      } else {\n        oldUser.mode = currentUser.mode;\n      }\n      actualUsers.push(currentUser.nick);\n    });\n    // buscamos usuarios que ya no estan\n    channelObj.users.forEach((user, idx) => {\n      if (!actualUsers.find(acu => user.nick === acu)) {\n        channelObj.users.splice(idx, 1);\n      }\n    });\n    this.membersChanged.emit({channel: channel, users: channelObj.users});\n  }\n\n  private sendSpecialMSG(channel: ChannelData, message: string) {\n    const msg: GenericMessage = {\n      message: message,\n      date: Time.getTime() + ' ' + Time.getDateStr(),\n      special: false,\n      target: channel.name,\n      notify: true\n    };\n    channel.messages.push(msg);\n    this.messagesReceived.emit(msg);\n  }\n\n  onKick(data: KickInfo) {\n    if (data.userTarget.nick === this.userSrv.getNick()) {\n      this.channels.splice(this.channels.findIndex(chan => chan.name === data.channel.name));\n      this.listChanged.emit(this.channels);\n    } else {\n      const chnlObj = this.channels.find(chnl => chnl.name === data.channel.name);\n      if (chnlObj) {\n        const idx = chnlObj.users.findIndex(user => user.nick === data.userTarget.nick);\n        if (idx >= 0) {\n          chnlObj.users.splice(idx, 1);\n        }\n      } else {\n        console.error('No se encontró el canal en el que se kickeó el usuario.', data.channel);\n      }\n      this.membersChanged.emit({channel: data.channel.name, users: chnlObj.users});\n      this.sendSpecialMSG(chnlObj, data.userTarget.nick + ' fué kickeado/a del canal por '+ data.operator +'.');\n    }\n\n  }\n\n  onPart(data: Part) {\n    if (data.user.nick === this.userSrv.getNick()) {\n      this.channels.splice(this.channels.findIndex(chan => chan.name === data.channel.name), 1);\n      this.listChanged.emit(this.channels);\n    } else {\n      const chnlObj = this.channels.find(chnl => chnl.name === data.channel.name);\n      if (chnlObj) {\n        const idx = chnlObj.users.findIndex(user => user.nick === data.user.nick);\n        if (idx >= 0) {\n          chnlObj.users.splice(idx, 1);\n        }\n      } else {\n        console.error('No se encontró el canal en el que partió el usuario.', data.channel);\n      }\n      this.membersChanged.emit({channel: data.channel.name, users: chnlObj.users});\n      this.sendSpecialMSG(chnlObj, data.user.nick + ' se fué del canal');\n    }\n  }\n\n  onJoin(data: Join) {\n    if (data.user.nick === this.userSrv.getNick()) {\n      if (!this.channels.find(chnl => chnl.name === data.channel.name)) {\n        this.addChannel(data.channel.name);\n      }\n      this.listChanged.emit(this.channels);\n    } else {\n      const chnlObj = this.channels.find(chnl => chnl.name === data.channel.name);\n      if (chnlObj) {\n        const newUser = new User(data.user.nick);\n        newUser.mode = data.user.mode;\n        chnlObj.users.push(newUser);\n      } else {\n        console.error('No se encontró el canal en el que se unió el usuario.', data.channel);\n      }\n      this.membersChanged.emit({channel: data.channel.name, users: chnlObj.users});\n      this.sendSpecialMSG(chnlObj, data.user.nick + ' se unió al canal');\n    }\n  }\n\n  onNickChanged(nick: NickChange) {\n    // buscar en la lista de usuarios en cada canal el nick y cambiarlo\n    this.channels.forEach((chnl: ChannelData) => {\n      const oldUsr = chnl.users.find(usr => usr.nick === nick.oldNick);\n      oldUsr.nick = nick.newNick;\n      this.membersChanged.emit({channel: chnl.name, users: chnl.users});\n      this.sendSpecialMSG(chnl, nick.oldNick + ' se cambió el nick a ' + nick.newNick);\n    });\n  }\n\n  onTopicUpdate(channel: string, newTopic: string) {\n    if(channel[0] === '#') {\n      channel = channel.substring(1);\n    }\n    const chnlObj = this.channels.find(chnl => chnl.name === channel);\n    if (chnlObj) {\n      chnlObj.topic = newTopic;\n    } else {\n      console.error('No se encontró el canal en el que se cambió el topic. ', channel);\n    }\n  }\n\n  getChannels() {\n    return this.channels;\n  }\n\n  getChannel(channel: string) {\n    return this.channels.find(chanObj => chanObj.name == channel);\n  }\n\n  onMessageReceived(message: IndividualMessage) {\n    if(message.messageType == IndividualMessageTypes.CHANMSG) {\n      const tgtChan =  message.channel[0] == '#' ?  message.channel.substring(1) :  message.channel;\n      const chanObj = this.channels.find(chan => chan.name == tgtChan);\n      const msg: GenericMessage = {\n        message: (message.message as string),\n        messageWithMetadata:  PostProcessor.processMessage(message.message as string, message.author, this.userSrv.getNick()),\n        author: new Author<string>(message.author),\n        date: message.date + ' ' + message.time,\n        special: message.meAction,\n        target: tgtChan\n      };\n      chanObj.messages.push(msg);\n      this.messagesReceived.emit(msg);\n      this.saveHistory(tgtChan, msg)\n    }\n  }\n}\n","import { GenericMessage } from './ChannelData';\nexport class PrivmsgData {\n  public user: string;\n  public messages: GenericMessage[] = [];\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { IndividualMessage, IndividualMessageTypes } from '../dto/IndividualMessage';\nimport { MessageHandler, OnMessageReceived } from '../handlers/Message.handler';\nimport { PostProcessor } from '../utils/PostProcessor';\nimport { GenericMessage, Author } from './ChannelData';\nimport { PrivmsgData } from './PrivmsgData';\nimport { UserInfoService } from './user-info.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrivmsgService implements OnMessageReceived {\n\n  public readonly messagesReceived: EventEmitter<GenericMessage> = new EventEmitter<GenericMessage>();\n  public readonly newPrivOpened: EventEmitter<string> = new EventEmitter<string>();\n  public readonly closedPriv: EventEmitter<string> = new EventEmitter<string>();\n  public privMsgs: { [key: string]: PrivmsgData } = {};\n\n  public history: { [key: string]: GenericMessage[] };\n\n  constructor(private userSrv: UserInfoService) {\n    MessageHandler.setHandler(this);\n    this.history = JSON.parse(localStorage.getItem('pv_history'));\n    if(!this.history) {\n      this.history = {};\n    }\n  }\n\n  onMessageReceived(message: IndividualMessage) {\n    if(message.messageType == IndividualMessageTypes.PRIVMSG) {\n      const msgAuthor = message.privateAuthor ? message.privateAuthor : message.author;\n      const msg: GenericMessage = {\n        message: (message.message as string),\n        messageWithMetadata:  PostProcessor.processMessage(message.message as string, msgAuthor, this.userSrv.getNick()),\n        author: new Author<string>(msgAuthor),\n        date: message.date + ' ' + message.time,\n        special: message.meAction,\n        target: message.channel\n      };\n      if(this.privMsgs[message.author]) {\n        this.privMsgs[message.author].messages.push(msg);\n      } else {\n        this.newPrivOpened.emit(message.author);\n        this.privMsgs[message.author] = new PrivmsgData();\n        this.privMsgs[message.author].user = message.author;\n        this.privMsgs[message.author].messages.push(msg);\n      }\n      this.messagesReceived.emit(msg);\n      this.saveHistory(message.author, msg);\n\n    }\n  }\n\n  saveHistory(author: string, msg: GenericMessage) {\n    if (!this.history[author]) {\n      this.history[author] = [];\n    }\n    const msC = Object.assign({}, msg);\n    msC.fromHistory = true;\n    this.history[author].push(msC);\n    localStorage.setItem('pv_history', JSON.stringify(this.history));\n  }\n\n  getHistory(author: string): GenericMessage[] {\n    return this.history[author];\n  }\n\n  getPrivate(nick: string): PrivmsgData {\n    if(!this.privMsgs[nick]) {\n      this.privMsgs[nick] = new PrivmsgData();\n      this.privMsgs[nick].user = nick;\n      this.newPrivOpened.emit(nick);\n    }\n    return this.privMsgs[nick];\n  }\n\n  closePrivate(nick: string) {\n    delete this.privMsgs[nick];\n    this.closedPriv.emit(nick);\n  }\n\n}\n","import { IRCMessage } from './../utils/IRCMessage.util';\nimport { ServerHandler } from './../handlers/Server.handler';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerMsgService {\n\n  public readonly messages: IRCMessage[] = [];\n  public readonly newMessage: EventEmitter<IRCMessage> = new EventEmitter<IRCMessage>();\n\n  constructor() {\n    ServerHandler.serverResponse.subscribe((d: IRCMessage) => {\n      this.messages.push(d);\n      this.newMessage.emit(d);\n    })\n    ServerHandler.serverNoticeResponse.subscribe((d: IRCMessage) => {\n      this.messages.push(d);\n      this.newMessage.emit(d);\n    });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Who } from '../dto/Who';\nimport { WhoHandler } from '../handlers/Who.handler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WhoStatusService {\n\n  public whoStatus: {[key: string]: Who} = {};\n\n  constructor() {\n    WhoHandler.onWhoResponse.subscribe((dW: Who) => {\n      this.whoStatus[dW.nick] = dW;\n    });\n  }\n\n  public isAway(nick: string) {\n    if(this.whoStatus[nick] && this.whoStatus[nick].isAway) {\n      return true;\n    }\n    return false;\n  }\n}\n","/*\n * Public API Surface of ircore\n */\n\n/** Main classes */\nexport * from './lib/IRCParserV2';\nexport * from './lib/ircore.module';\nexport * from './lib/IRCore.service';\n\n/** SERVICES */\nexport * from './lib/services/ChannelData';\nexport * from './lib/services/channels.service';\nexport * from './lib/services/privmsg.service';\nexport * from './lib/services/PrivmsgData';\nexport * from './lib/services/server-msg.service';\nexport * from './lib/services/user-info.service';\nexport * from './lib/services/who-status.service';\n\n/** HANDLERS */\nexport * from './lib/handlers/Away.handler';\nexport * from './lib/handlers/ChannelList.handler';\nexport * from './lib/handlers/ChannelStatus.handler';\nexport * from './lib/handlers/Gmode.handler';\nexport * from './lib/handlers/Ignore.Handler';\nexport * from './lib/handlers/Join.handler';\nexport * from './lib/handlers/Kick.handler';\nexport * from './lib/handlers/List.handler';\nexport * from './lib/handlers/Message.handler';\nexport * from './lib/handlers/Mode.handler';\nexport * from './lib/handlers/Moderated.handler';\nexport * from './lib/handlers/Motd.handler';\nexport * from './lib/handlers/Part.handler';\nexport * from './lib/handlers/Quit.handler';\nexport * from './lib/handlers/Server.handler';\nexport * from './lib/handlers/Status.handler';\nexport * from './lib/handlers/Users.handler';\nexport * from './lib/handlers/Who.handler';\nexport * from './lib/handlers/Whois.handler';\n\n/** DTOs */\nexport * from './lib/dto/Away';\nexport * from './lib/dto/Channel';\nexport * from './lib/dto/ChannelInfo';\nexport * from './lib/dto/IndividualMessage';\nexport * from './lib/dto/Join';\nexport * from './lib/dto/KickInfo';\nexport * from './lib/dto/NewMode';\nexport * from './lib/dto/NickChange';\nexport * from './lib/dto/Part';\nexport * from './lib/dto/Quit';\nexport * from './lib/dto/User';\nexport * from './lib/dto/UserInChannel';\nexport * from './lib/dto/Who';\nexport * from './lib/dto/WhoIs';\n\n/** UTILS */\nexport * from './lib/utils/EmoteList';\nexport * from './lib/utils/IRCMessage.util';\nexport * from './lib/utils/PostProcessor';\nexport * from './lib/utils/Time.util';\nexport * from './lib/utils/UModes.utils';\nexport * from './lib/utils/validRegex';\nexport * from './lib/utils/WebSocket.util';\n\n/** Helpers */\nexport * from './lib/helpers/avatar.helper';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}